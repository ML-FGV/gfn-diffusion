GFN(
  (t_model): TimeEncodingVAE(
    (t_model): Sequential(
      (0): Linear(in_features=128, out_features=64, bias=True)
      (1): GELU(approximate='none')
      (2): Linear(in_features=64, out_features=64, bias=True)
    )
  )
  (s_model): StateEncodingVAE(
    (x_model): Sequential(
      (0): Linear(in_features=3, out_features=64, bias=True)
      (1): GELU(approximate='none')
      (2): Sequential(
        (0): Linear(in_features=64, out_features=64, bias=True)
        (1): GELU(approximate='none')
      )
      (3): Sequential(
        (0): Linear(in_features=64, out_features=64, bias=True)
        (1): GELU(approximate='none')
      )
      (4): Linear(in_features=64, out_features=64, bias=True)
    )
  )
  (d_model): DeepSet(
    (phi): Sequential(
      (0): Linear(in_features=2, out_features=64, bias=True)
      (1): ReLU()
      (2): Linear(in_features=64, out_features=64, bias=True)
      (3): ReLU()
    )
    (rho): Sequential(
      (0): Linear(in_features=64, out_features=64, bias=True)
      (1): ReLU()
      (2): Linear(in_features=64, out_features=1, bias=True)
    )
  )
  (joint_model): JointPolicyVAE(
    (model): Sequential(
      (0): GELU(approximate='none')
      (1): Sequential(
        (0): Linear(in_features=64, out_features=64, bias=True)
        (1): GELU(approximate='none')
      )
      (2): Sequential(
        (0): Linear(in_features=64, out_features=64, bias=True)
        (1): GELU(approximate='none')
      )
      (3): Linear(in_features=64, out_features=4, bias=True)
    )
  )
  (flow_model): FlowModelVAE(
    (model): Sequential(
      (0): GELU(approximate='none')
      (1): Sequential(
        (0): Linear(in_features=64, out_features=64, bias=True)
        (1): GELU(approximate='none')
      )
      (2): Sequential(
        (0): Linear(in_features=64, out_features=64, bias=True)
        (1): GELU(approximate='none')
      )
      (3): Linear(in_features=64, out_features=1, bias=True)
    )
  )
  (langevin_scaling_model): LangevinScalingModelVAE(
    (lgv_model): Sequential(
      (0): Linear(in_features=128, out_features=64, bias=True)
      (1): Sequential(
        (0): GELU(approximate='none')
        (1): Linear(in_features=64, out_features=64, bias=True)
      )
      (2): Sequential(
        (0): GELU(approximate='none')
        (1): Linear(in_features=64, out_features=64, bias=True)
      )
      (3): GELU(approximate='none')
      (4): Linear(in_features=64, out_features=1, bias=True)
    )
  )
)
 12%|█▏        | 3100/25001 [16:45<1:46:18,  3.43it/s]
logz: tensor(-52.2279)
logz: tensor(-61.3709)
logz: tensor(-49.4535)
logz: tensor(-50.2564)
logz: tensor(-53.8314)
logz: tensor(-48.5502)
logz: tensor(-50.8808)
logz: tensor(-53.1196)
logz: tensor(-49.2815)
logz: tensor(-53.0945)
logz: tensor(-50.5644)
logz: tensor(-50.5383)
logz: tensor(-53.1017)
logz: tensor(-52.0550)
logz: tensor(-51.6976)
logz: tensor(-55.1833)
logz: tensor(-53.0425)
logz: tensor(-54.1551)
logz: tensor(-54.9296)
logz: tensor(-57.3317)
logz: tensor(-59.5512)
logz: tensor(-54.9082)
logz: tensor(-59.0488)
logz: tensor(-58.8449)
logz: tensor(-57.8855)
logz: tensor(-63.2414)
logz: tensor(-59.8017)
logz: tensor(-60.8114)
logz: tensor(-60.2968)
logz: tensor(-59.6885)
logz: tensor(-63.3476)
logz: tensor(-62.8146)
logz: tensor(-63.7330)
logz: tensor(-63.1825)
logz: tensor(-64.0698)
logz: tensor(-66.7363)
logz: tensor(-67.1230)
logz: tensor(-70.6876)
logz: tensor(-66.6204)
logz: tensor(-71.2468)
logz: tensor(-80.1758)
logz: tensor(-72.3667)
logz: tensor(-80.6625)
logz: tensor(-72.1075)
logz: tensor(-78.9404)
logz: tensor(-92.7222)
logz: tensor(-89.8068)
logz: tensor(-89.0454)
logz: tensor(-106.3987)
logz: tensor(-93.8444)
logz: tensor(-85.0929)
logz: tensor(-78.5692)
logz: tensor(-85.3535)
logz: tensor(-80.3902)
logz: tensor(-86.3711)
logz: tensor(-82.3189)
logz: tensor(-85.5650)
logz: tensor(-79.3798)
logz: tensor(-80.3130)
logz: tensor(-79.8336)
logz: tensor(-75.7915)
logz: tensor(-82.3661)
logz: tensor(-81.8952)
logz: tensor(-85.3704)
logz: tensor(-79.5833)
logz: tensor(-80.0365)
logz: tensor(-80.2889)
logz: tensor(-84.7879)
logz: tensor(-80.3292)
logz: tensor(-81.2252)
logz: tensor(-77.4040)
logz: tensor(-83.6233)
logz: tensor(-80.7149)
logz: tensor(-75.1449)
logz: tensor(-76.2947)
logz: tensor(-77.8591)
logz: tensor(-78.9322)
logz: tensor(-80.4923)
logz: tensor(-77.9062)
logz: tensor(-74.7995)
logz: tensor(-77.7376)
logz: tensor(-80.8878)
logz: tensor(-78.0227)
logz: tensor(-81.0591)
logz: tensor(-84.0430)
logz: tensor(-78.0686)
logz: tensor(-80.5339)
logz: tensor(-70.8765)
logz: tensor(-79.0048)
logz: tensor(-82.2651)
logz: tensor(-81.0948)
logz: tensor(-80.5318)
logz: tensor(-78.3129)
logz: tensor(-78.8073)
logz: tensor(-76.1193)
logz: tensor(-80.8354)
logz: tensor(-79.4989)
logz: tensor(-79.1591)
logz: tensor(-82.5841)
logz: tensor(-80.9289)
logz: tensor(-75.9435)
logz: tensor(-81.8229)
logz: tensor(-76.7162)
logz: tensor(-78.0351)
logz: tensor(-79.4363)
logz: tensor(-80.3549)
logz: tensor(-76.8419)
logz: tensor(-75.7359)
logz: tensor(-74.0188)
logz: tensor(-76.5035)
logz: tensor(-75.3587)
logz: tensor(-74.2824)
logz: tensor(-79.6746)
logz: tensor(-78.5185)
logz: tensor(-77.5292)
logz: tensor(-75.0854)
logz: tensor(-74.6117)
logz: tensor(-76.2501)
logz: tensor(-76.4066)
logz: tensor(-73.8190)
logz: tensor(-75.0565)
logz: tensor(-75.4348)
logz: tensor(-77.9440)
logz: tensor(-72.5467)
logz: tensor(-74.2668)
logz: tensor(-73.1546)
logz: tensor(-76.3817)
logz: tensor(-78.7617)
logz: tensor(-76.7579)
logz: tensor(-80.8474)
logz: tensor(-79.8892)
logz: tensor(-75.5148)
logz: tensor(-75.8620)
logz: tensor(-76.4624)
logz: tensor(-78.0859)
logz: tensor(-78.2261)
logz: tensor(-78.5142)
logz: tensor(-72.4678)
logz: tensor(-77.0642)
logz: tensor(-76.0054)
logz: tensor(-73.1738)
logz: tensor(-75.7775)
logz: tensor(-78.4106)
logz: tensor(-72.5956)
logz: tensor(-76.7630)
logz: tensor(-75.5577)
logz: tensor(-73.3443)
logz: tensor(-74.1757)
logz: tensor(-68.8802)
logz: tensor(-72.8289)
logz: tensor(-70.6032)
logz: tensor(-73.0023)
logz: tensor(-73.4585)
logz: tensor(-71.6468)
logz: tensor(-81.9104)
logz: tensor(-76.4712)
logz: tensor(-73.9501)
logz: tensor(-75.7739)
logz: tensor(-73.7538)
logz: tensor(-73.5833)
logz: tensor(-69.2935)
logz: tensor(-71.6910)
logz: tensor(-68.7968)
logz: tensor(-69.1199)
logz: tensor(-69.1436)
logz: tensor(-72.2737)
logz: tensor(-67.6884)
logz: tensor(-68.8106)
logz: tensor(-67.7494)
logz: tensor(-69.2557)
logz: tensor(-69.2426)
logz: tensor(-69.1071)
logz: tensor(-69.1626)
logz: tensor(-67.8518)
logz: tensor(-69.8924)
logz: tensor(-68.1773)
logz: tensor(-68.4722)
logz: tensor(-66.0220)
logz: tensor(-67.2130)
logz: tensor(-67.4552)
logz: tensor(-67.8254)
logz: tensor(-68.3259)
logz: tensor(-65.7086)
logz: tensor(-67.9562)
logz: tensor(-67.6841)
logz: tensor(-63.6991)
logz: tensor(-62.9977)
logz: tensor(-69.8691)
logz: tensor(-64.4492)
logz: tensor(-66.8224)
logz: tensor(-63.9747)
logz: tensor(-65.9528)
logz: tensor(-65.8777)
logz: tensor(-65.3390)
logz: tensor(-64.9360)
logz: tensor(-61.9319)
logz: tensor(-63.1884)
logz: tensor(-63.3009)
logz: tensor(-65.8665)
logz: tensor(-68.7950)
logz: tensor(-63.2462)
logz: tensor(-78.3513)
logz: tensor(-76.8638)
logz: tensor(-77.1877)
logz: tensor(-77.7175)
logz: tensor(-74.4752)
logz: tensor(-71.5118)
logz: tensor(-74.1194)
logz: tensor(-74.3143)
logz: tensor(-74.0739)
logz: tensor(-75.6971)
logz: tensor(-74.7285)
logz: tensor(-69.0023)
logz: tensor(-70.0862)
logz: tensor(-71.0758)
logz: tensor(-70.3059)
logz: tensor(-70.7597)
logz: tensor(-71.4316)
logz: tensor(-72.1596)
logz: tensor(-68.9090)
logz: tensor(-68.6566)
logz: tensor(-69.4731)
logz: tensor(-69.8406)
logz: tensor(-68.3592)
logz: tensor(-67.8631)
logz: tensor(-65.6065)
logz: tensor(-66.2901)
logz: tensor(-67.5568)
logz: tensor(-67.7300)
logz: tensor(-67.6001)
logz: tensor(-69.5996)
logz: tensor(-66.4262)
logz: tensor(-64.6802)
logz: tensor(-65.2438)
logz: tensor(-66.7391)
logz: tensor(-67.0791)
logz: tensor(-63.6293)
logz: tensor(-66.0515)
logz: tensor(-66.3721)
logz: tensor(-65.2191)
logz: tensor(-63.5467)
logz: tensor(-64.4793)
logz: tensor(-66.4050)
logz: tensor(-66.0857)
logz: tensor(-65.6547)
logz: tensor(-64.5558)
logz: tensor(-65.0529)
logz: tensor(-68.5695)
logz: tensor(-66.7275)
logz: tensor(-63.9171)
logz: tensor(-63.0030)
Traceback (most recent call last):
  File "/Users/pedrodall/Documents/mestrado/projetos/gfn-diffusion/vae/train.py", line 382, in <module>
    train()
  File "/Users/pedrodall/Documents/mestrado/projetos/gfn-diffusion/vae/train.py", line 362, in train
    eval_results = eval_step(final_eval_data, energy, gfn_model, final_eval=True, condition=condition)
  File "/Users/pedrodall/Documents/mestrado/projetos/gfn-diffusion/vae/train.py", line 177, in eval_step
    'final_eval/log_Z_learned'] = log_partition_function(
  File "/Users/pedrodall/miniforge3/envs/energy_sampling_env/lib/python3.8/site-packages/torch/utils/_contextlib.py", line 116, in decorate_context
    return func(*args, **kwargs)
  File "/Users/pedrodall/Documents/mestrado/projetos/gfn-diffusion/vae/evaluations.py", line 8, in log_partition_function
    states, log_pfs, log_pbs, log_fs = gfn.get_trajectory_fwd(initial_state, None, log_reward_fn, condition)
  File "/Users/pedrodall/Documents/mestrado/projetos/gfn-diffusion/vae/models/gfn.py", line 140, in get_trajectory_fwd
    pfs, flow = self.predict_next_state(s, i * self.dt, log_r, condition)
  File "/Users/pedrodall/Documents/mestrado/projetos/gfn-diffusion/vae/models/gfn.py", line 109, in predict_next_state
    s = self.s_model(s)
  File "/Users/pedrodall/miniforge3/envs/energy_sampling_env/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/Users/pedrodall/miniforge3/envs/energy_sampling_env/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
TypeError: forward() missing 1 required positional argument: 'condition'
